/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Conexion;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class detallesCompras extends javax.swing.JFrame {

    String id, dia, mes, a√±o, producto, proveedor, total, queryotro, insertar;
    double precio, totalProducto;
    int cantidad;
    Conexion bd;
    ResultSet res;
    Statement s;

    /**
     * Creates new form detallesCompras
     */
    public detallesCompras() {
        initComponents();
        detallesComprasEscribirProducto.removeAllItems();

    }
    ArrayList<String> listaProductos = new ArrayList<String>();
    ArrayList<String> listaProveedores = new ArrayList<String>();
    DefaultComboBoxModel modelo = new DefaultComboBoxModel();
    int bandera = 0;
    int bandera2 = 0;
    int bandera3 = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detallesComprasEncabezado = new javax.swing.JPanel();
        detallesComprasTitulo = new javax.swing.JLabel();
        detallesComprasCuerpo = new javax.swing.JPanel();
        detallesComprasID = new javax.swing.JLabel();
        detallesComprasEscribirID = new javax.swing.JTextField();
        detallesComprasProducto = new javax.swing.JLabel();
        detallesComprasPrecio = new javax.swing.JLabel();
        detallesComprasEscribirPrecio = new javax.swing.JTextField();
        detallesComprasCantidad = new javax.swing.JLabel();
        detallesComprasEscribirCantidad = new javax.swing.JTextField();
        detallesrComprasTotal = new javax.swing.JLabel();
        detallesComprasEscribirTotal = new javax.swing.JTextField();
        detallesComprasEscribirProducto = new javax.swing.JComboBox<String>();
        detallesComprasBotonAgregar = new javax.swing.JButton();
        detallesComprasBotonDisminuir = new javax.swing.JButton();
        detallesComprasPie = new javax.swing.JPanel();
        detallesComprasBotonGuardar = new javax.swing.JButton();
        detallesComprasBotonVolver = new javax.swing.JButton();
        detallesComprasBotonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                detallesComprasCargarProductos(evt);
            }
        });

        detallesComprasEncabezado.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasEncabezado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEncabezado.setForeground(new java.awt.Color(255, 255, 255));

        detallesComprasTitulo.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasTitulo.setFont(new java.awt.Font("Javanese Text", 1, 26)); // NOI18N
        detallesComprasTitulo.setForeground(new java.awt.Color(255, 255, 255));
        detallesComprasTitulo.setText("Detalles Compras");
        detallesComprasTitulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout detallesComprasEncabezadoLayout = new javax.swing.GroupLayout(detallesComprasEncabezado);
        detallesComprasEncabezado.setLayout(detallesComprasEncabezadoLayout);
        detallesComprasEncabezadoLayout.setHorizontalGroup(
            detallesComprasEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detallesComprasEncabezadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detallesComprasTitulo)
                .addGap(78, 78, 78))
        );
        detallesComprasEncabezadoLayout.setVerticalGroup(
            detallesComprasEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesComprasEncabezadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detallesComprasTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        detallesComprasCuerpo.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasCuerpo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasCuerpo.setForeground(new java.awt.Color(255, 255, 255));

        detallesComprasID.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasID.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasID.setForeground(new java.awt.Color(255, 255, 255));
        detallesComprasID.setText("ID de la compra");

        detallesComprasEscribirID.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasEscribirID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEscribirID.setEnabled(false);
        detallesComprasEscribirID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirIDresaltarRegistrarComprasID(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirIDrestaurarRegistrarComprasID(evt);
            }
        });
        detallesComprasEscribirID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirIDagregaCostoTotal(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirIDverificarIRegistrarComprasID(evt);
            }
        });

        detallesComprasProducto.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasProducto.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasProducto.setForeground(new java.awt.Color(255, 255, 255));
        detallesComprasProducto.setText("Producto");
        detallesComprasProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesComprasPrecio.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasPrecio.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasPrecio.setForeground(new java.awt.Color(255, 255, 255));
        detallesComprasPrecio.setText("Precio");
        detallesComprasPrecio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesComprasEscribirPrecio.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasEscribirPrecio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEscribirPrecio.setEnabled(false);
        detallesComprasEscribirPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasEscribirPrecioActionPerformed(evt);
            }
        });
        detallesComprasEscribirPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirPrecioagregaTotal1(evt);
            }
        });

        detallesComprasCantidad.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasCantidad.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasCantidad.setForeground(new java.awt.Color(255, 255, 255));
        detallesComprasCantidad.setText("Cantidad");
        detallesComprasCantidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesComprasEscribirCantidad.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasEscribirCantidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEscribirCantidad.setEnabled(false);
        detallesComprasEscribirCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirCantidadresaltarRegistrarComprasCantidad(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirCantidadrestaurarRegistrarComprasCantidad(evt);
            }
        });
        detallesComprasEscribirCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirCantidadagregaTotal(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirCantidadverificarRegistrarComprasCantidad(evt);
            }
        });

        detallesrComprasTotal.setBackground(new java.awt.Color(0, 0, 0));
        detallesrComprasTotal.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesrComprasTotal.setForeground(new java.awt.Color(255, 255, 255));
        detallesrComprasTotal.setText("Total");
        detallesrComprasTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesComprasEscribirTotal.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasEscribirTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEscribirTotal.setEnabled(false);

        detallesComprasEscribirProducto.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasEscribirProducto.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasEscribirProducto.setToolTipText("Elige el producto");
        detallesComprasEscribirProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasEscribirProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                detallesComprasEscribirProductoItemStateChanged(evt);
            }
        });
        detallesComprasEscribirProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirProductoresaltarRegistrarComprasProducto(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesComprasEscribirProductorestaurarRegistrarComprasProducto(evt);
            }
        });
        detallesComprasEscribirProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasEscribirProductoActionPerformed(evt);
            }
        });
        detallesComprasEscribirProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesComprasEscribirProductoagregaPrecio(evt);
            }
        });

        detallesComprasBotonAgregar.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasBotonAgregar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasBotonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.jpg"))); // NOI18N
        detallesComprasBotonAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasBotonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesComprasBotonAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesComprasBotonAgregarMouseExited(evt);
            }
        });
        detallesComprasBotonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasBotonAgregarActionPerformed(evt);
            }
        });

        detallesComprasBotonDisminuir.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasBotonDisminuir.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasBotonDisminuir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Disminuir.jpg"))); // NOI18N
        detallesComprasBotonDisminuir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasBotonDisminuir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesComprasBotonDisminuirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesComprasBotonDisminuirMouseExited(evt);
            }
        });
        detallesComprasBotonDisminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasBotonDisminuirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detallesComprasCuerpoLayout = new javax.swing.GroupLayout(detallesComprasCuerpo);
        detallesComprasCuerpo.setLayout(detallesComprasCuerpoLayout);
        detallesComprasCuerpoLayout.setHorizontalGroup(
            detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesComprasCuerpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detallesComprasCuerpoLayout.createSequentialGroup()
                        .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detallesComprasPrecio)
                            .addComponent(detallesComprasCantidad)
                            .addComponent(detallesrComprasTotal)
                            .addComponent(detallesComprasProducto))
                        .addGap(18, 18, 18)
                        .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detallesComprasEscribirProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(detallesComprasCuerpoLayout.createSequentialGroup()
                                .addComponent(detallesComprasEscribirCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detallesComprasBotonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detallesComprasBotonDisminuir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(detallesComprasEscribirPrecio)
                            .addComponent(detallesComprasEscribirTotal)))
                    .addGroup(detallesComprasCuerpoLayout.createSequentialGroup()
                        .addComponent(detallesComprasID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(detallesComprasEscribirID)))
                .addContainerGap())
        );
        detallesComprasCuerpoLayout.setVerticalGroup(
            detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesComprasCuerpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesComprasID)
                    .addComponent(detallesComprasEscribirID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesComprasProducto)
                    .addComponent(detallesComprasEscribirProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesComprasPrecio)
                    .addComponent(detallesComprasEscribirPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(detallesComprasCantidad)
                        .addComponent(detallesComprasEscribirCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(detallesComprasBotonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesComprasBotonDisminuir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesComprasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesrComprasTotal)
                    .addComponent(detallesComprasEscribirTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        detallesComprasPie.setBackground(new java.awt.Color(0, 0, 0));
        detallesComprasPie.setForeground(new java.awt.Color(255, 255, 255));

        detallesComprasBotonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasBotonGuardar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasBotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.jpg"))); // NOI18N
        detallesComprasBotonGuardar.setText("Guardar");
        detallesComprasBotonGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasBotonGuardar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                detallesComprasBotonGuardarItemStateChanged(evt);
            }
        });
        detallesComprasBotonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesComprasBotonGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesComprasBotonGuardarMouseExited(evt);
            }
        });
        detallesComprasBotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasBotonGuardarActionPerformed(evt);
            }
        });

        detallesComprasBotonVolver.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasBotonVolver.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasBotonVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.jpg"))); // NOI18N
        detallesComprasBotonVolver.setText("Volver");
        detallesComprasBotonVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasBotonVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesComprasBotonVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesComprasBotonVolverMouseExited(evt);
            }
        });
        detallesComprasBotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasBotonVolverActionPerformed(evt);
            }
        });

        detallesComprasBotonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        detallesComprasBotonLimpiar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesComprasBotonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar.jpg"))); // NOI18N
        detallesComprasBotonLimpiar.setText("Limpiar");
        detallesComprasBotonLimpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesComprasBotonLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesComprasBotonLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesComprasBotonLimpiarMouseExited(evt);
            }
        });
        detallesComprasBotonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesComprasBotonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detallesComprasPieLayout = new javax.swing.GroupLayout(detallesComprasPie);
        detallesComprasPie.setLayout(detallesComprasPieLayout);
        detallesComprasPieLayout.setHorizontalGroup(
            detallesComprasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesComprasPieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detallesComprasBotonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detallesComprasBotonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(detallesComprasBotonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        detallesComprasPieLayout.setVerticalGroup(
            detallesComprasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesComprasPieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesComprasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesComprasBotonGuardar)
                    .addComponent(detallesComprasBotonVolver)
                    .addComponent(detallesComprasBotonLimpiar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(detallesComprasCuerpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesComprasEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesComprasPie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detallesComprasEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detallesComprasCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detallesComprasPie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void detallesComprasEscribirIDresaltarRegistrarComprasID(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirIDresaltarRegistrarComprasID
        // TODO add your handling code here:
        detallesComprasID.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasEscribirID.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasEscribirIDresaltarRegistrarComprasID

    private void detallesComprasEscribirIDrestaurarRegistrarComprasID(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirIDrestaurarRegistrarComprasID
        // TODO add your handling code here:
        detallesComprasID.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasEscribirID.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasEscribirIDrestaurarRegistrarComprasID

    private void detallesComprasEscribirIDagregaCostoTotal(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirIDagregaCostoTotal
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesComprasEscribirIDagregaCostoTotal

    private void detallesComprasEscribirIDverificarIRegistrarComprasID(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirIDverificarIRegistrarComprasID
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();

        if ((caracter < '0' || caracter > '9' && caracter != 'C')) {

            evt.consume();
        } else if (detallesComprasEscribirID.getText().length() >= 20) {

            evt.consume();
        }
    }//GEN-LAST:event_detallesComprasEscribirIDverificarIRegistrarComprasID

    private void detallesComprasEscribirPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasEscribirPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesComprasEscribirPrecioActionPerformed

    private void detallesComprasEscribirPrecioagregaTotal1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirPrecioagregaTotal1
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
        double precioTotal = precio * cantidad;
        String totalString = String.valueOf(precioTotal);
        detallesComprasEscribirTotal.setText(totalString);
    }//GEN-LAST:event_detallesComprasEscribirPrecioagregaTotal1

    private void detallesComprasEscribirCantidadresaltarRegistrarComprasCantidad(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirCantidadresaltarRegistrarComprasCantidad
        // TODO add your handling code here:
        detallesComprasCantidad.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasEscribirCantidad.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasEscribirCantidadresaltarRegistrarComprasCantidad

    private void detallesComprasEscribirCantidadrestaurarRegistrarComprasCantidad(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirCantidadrestaurarRegistrarComprasCantidad
        // TODO add your handling code here:
        detallesComprasCantidad.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasEscribirCantidad.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasEscribirCantidadrestaurarRegistrarComprasCantidad

    private void detallesComprasEscribirCantidadagregaTotal(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirCantidadagregaTotal
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
        double precioTotal = precio * cantidad;
        String totalString = String.valueOf(precioTotal);
        detallesComprasEscribirTotal.setText(totalString);
    }//GEN-LAST:event_detallesComprasEscribirCantidadagregaTotal

    private void detallesComprasEscribirCantidadverificarRegistrarComprasCantidad(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirCantidadverificarRegistrarComprasCantidad
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();

        if ((caracter < '0' || caracter > '9' && caracter != 'C')) {

            evt.consume();
        } else if (detallesComprasEscribirCantidad.getText().length() >= 9) {

            evt.consume();
        }
    }//GEN-LAST:event_detallesComprasEscribirCantidadverificarRegistrarComprasCantidad

    private void detallesComprasEscribirProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_detallesComprasEscribirProductoItemStateChanged
        // TODO add your handling code here:
        if (detallesComprasEscribirProducto.getSelectedIndex() == 0) {
            detallesComprasEscribirPrecio.setText("0");
            detallesComprasEscribirCantidad.setText("0");
            detallesComprasEscribirTotal.setText("0");
        } else if (detallesComprasEscribirProducto.getSelectedIndex() > 0) {
            String seleccionado = detallesComprasEscribirProducto.getSelectedItem().toString();

            try {
                bd = new Conexion();
                s = null;
                s = Conexion.conectar().createStatement();
                res = s.executeQuery("select * from productos_existencia where descripcion='" + seleccionado + "';");
                if (res.next()) {
                    detallesComprasEscribirPrecio.setText(String.valueOf(res.getString("precio_compra").toString()));
                    precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
                    cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
                    double totalProducto = precio * cantidad;
                    String totalProducto2 = String.valueOf(totalProducto);
                    detallesComprasEscribirTotal.setText(totalProducto2);
                    s.close();

                } else {
                    JOptionPane.showMessageDialog(null, "ESE CODIGO DE PRODUCTO NO EXISTE");
                }
            } catch (SQLException e) {
                detallesComprasEscribirPrecio.setText("0");
                JOptionPane.showMessageDialog(null, "SE HA GENERADO UN ERROR, " + e);
            }
        }
    }//GEN-LAST:event_detallesComprasEscribirProductoItemStateChanged

    private void detallesComprasEscribirProductoresaltarRegistrarComprasProducto(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirProductoresaltarRegistrarComprasProducto
        // TODO add your handling code here:
        detallesComprasProducto.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasEscribirProducto.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasEscribirProductoresaltarRegistrarComprasProducto

    private void detallesComprasEscribirProductorestaurarRegistrarComprasProducto(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesComprasEscribirProductorestaurarRegistrarComprasProducto
        // TODO add your handling code here:
        detallesComprasProducto.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasEscribirProducto.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasEscribirProductorestaurarRegistrarComprasProducto

    private void detallesComprasEscribirProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasEscribirProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesComprasEscribirProductoActionPerformed

    private void detallesComprasEscribirProductoagregaPrecio(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesComprasEscribirProductoagregaPrecio
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesComprasEscribirProductoagregaPrecio

    private void detallesComprasBotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasBotonGuardarActionPerformed
        // TODO add your handling code here:

        id = detallesComprasEscribirID.getText().toString();
        producto = detallesComprasEscribirProducto.getSelectedItem().toString();
        precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
        totalProducto = Double.parseDouble(detallesComprasEscribirTotal.getText());
        String cantidad2 = String.valueOf(cantidad);

        if (detallesComprasEscribirProducto.getSelectedIndex() > 0) {
            if (cantidad2.length() > 0 && cantidad > 0) {

                try {
                    bd = new Conexion();
                    s = null;
                    s = Conexion.conectar().createStatement();
                    ResultSet res2 = s.executeQuery("select id_producto from productos_existencia where descripcion='" + producto + "';");
                    if (res2.next()) {
                        producto = res2.getString("id_producto");
                        queryotro = "select * from detalles_compras WHERE ID_compra='" + id + "' AND ID_PRODUCTO='" + producto + "';";
                    }

                    if (bd.resultado(queryotro).next()) {

                        insertar = "UPDATE detalles_compras SET "
                                + "Cantidad_comprada = cantidad_comprada + '" + cantidad + "',"
                                + "total = cantidad_comprada  * precio where ID_PRODUCTO='" + producto + "'; ";

                        s.execute(insertar);

                        insertar = "UPDATE productos_existencia SET "
                                + "existencia = existencia + '" + cantidad + "' where ID_PRODUCTO='" + producto + "'; ";

                        s.execute(insertar);

                        JOptionPane.showMessageDialog(null, "Se ah insertado correctamente");

                        detallesComprasEscribirProducto.setSelectedIndex(0);
                        detallesComprasEscribirPrecio.setText("0");
                        detallesComprasEscribirCantidad.setText("0");
                        detallesComprasEscribirTotal.setText("0");
                        detallesComprasEscribirProducto.requestFocus();
                    } else {

                        insertar = "insert into detalles_compras values ('" + id + "', '" + producto + "', '" + precio + "', '" + cantidad + "', '" + totalProducto + "')";
                        s.execute(insertar);

                        JOptionPane.showMessageDialog(null, "Se ah insertado correctamente");

                        detallesComprasEscribirProducto.setSelectedIndex(0);
                        detallesComprasEscribirPrecio.setText("0");
                        detallesComprasEscribirCantidad.setText("0");
                        detallesComprasEscribirTotal.setText("0");
                        detallesComprasEscribirProducto.requestFocus();

                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Se ah generado un error," + e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor rellena los campos correctamente");
                detallesComprasEscribirCantidad.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor rellena los campos correctamente");
            detallesComprasEscribirProducto.requestFocus();
        }


    }//GEN-LAST:event_detallesComprasBotonGuardarActionPerformed

    private void detallesComprasBotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasBotonVolverActionPerformed
        // TODO add your handling code here:
        registrarCompras nuevo = new registrarCompras();
        this.setVisible(false);
        nuevo.setVisible(true);

        try {
            bd = new Conexion();
            s = null;
            s = Conexion.conectar().createStatement();
            res = s.executeQuery("select * from proveedores");
            while (res.next()) {

                listaProveedores.add(res.getString("empresa"));
                //listaProveedores.add(res.getString("Empresa"));
                //res.next();
                //modelo.addItem(listaproductos);
            }

            if (bandera2 == 0) {
                
                registrarCompras.registrarComprasEscribirProveedor.addItem("Proveedor");//posicion 0 de la lista del combo
                for (int i = 0; i <= listaProveedores.size(); i++) {
                    registrarCompras.registrarComprasEscribirProveedor.addItem(listaProveedores.get(i));
                    bandera2 = 1;
                }
            }

        } catch (Exception e) {

        }
        
        id = detallesComprasEscribirID.getText().toString();

        if (id.length() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor ingresa un ID");
            registrarCompras.registrarComprasEscribirID.requestFocus();
        } else {
            try {
                bd = new Conexion();
                s = null;
                s = Conexion.conectar().createStatement();
                queryotro = "select c.dia_compra, c.mes_compra, c.a√±o_compra, p.empresa, c.total from compras c join proveedores p on c.id_proveedor=p.id_proveedor where ID_compra='" + id + "';";
                res = bd.resultado(queryotro);

                if (res.next()) {

                    registrarCompras.registrarComprasEscribirID.setText(detallesComprasEscribirID.getText());
                    registrarCompras.registrarComprasEscribirDia.setSelectedItem(res.getString("dia_compra"));
                    registrarCompras.registrarComprasEscribirMes.setSelectedItem(res.getString("mes_compra"));
                    registrarCompras.registrarComprasEscribirA√±o.setSelectedItem(res.getString("a√±o_compra"));
                    registrarCompras.registrarComprasEscribirProveedor.setSelectedItem(res.getString("empresa"));
                    registrarCompras.registrarComprasEscribirCostoTotal.setText(res.getString("total"));

                    registrarCompras.registrarComprasEscribirID.requestFocus();

                    registrarCompras.registrarComprasEscribirID.enable(false);
                    registrarCompras.registrarComprasEscribirDia.enable(false);
                    registrarCompras.registrarComprasEscribirMes.enable(false);
                    registrarCompras.registrarComprasEscribirA√±o.enable(false);
                    registrarCompras.registrarComprasEscribirProveedor.enable(false);
                    registrarCompras.registrarComprasEscribirCostoTotal.enable(false);
                    registrarCompras.registrarComprasBotonAgregar.setEnabled(false);
                    registrarCompras.registrarComprasBotonModificar.setEnabled(true);

                    bd.cerrar();
                } else {

                    //JOptionPane.showMessageDialog(null, "el producto no existe");
                    //modificarProductosEscribirID.setText(null);
                    //modificarProductosEscribirID.requestFocus();
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Se ah generado un error," + e);
            }

        }
    }//GEN-LAST:event_detallesComprasBotonVolverActionPerformed

    private void detallesComprasBotonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasBotonLimpiarActionPerformed
        // TODO add your handling code here:

        detallesComprasEscribirProducto.setSelectedIndex(0);
        detallesComprasEscribirPrecio.setText("0");
        detallesComprasEscribirCantidad.setText("0");
        detallesComprasEscribirTotal.setText("0");

        detallesComprasEscribirProducto.requestFocus();
    }//GEN-LAST:event_detallesComprasBotonLimpiarActionPerformed

    private void detallesComprasCargarProductos(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_detallesComprasCargarProductos
        // TODO add your handling code here:
        try {
            bd = new Conexion();
            s = null;
            s = Conexion.conectar().createStatement();
            res = s.executeQuery("select * from productos_existencia");
            while (res.next()) {

                listaProductos.add(res.getString("Descripcion"));
                //res.next();
                //modelo.addItem(listaproductos);
            }

            if (bandera == 0) {
                detallesComprasEscribirProducto.addItem("Producto");//posicion 0 de la lista del combo
                for (int i = 0; i <= listaProductos.size(); i++) {
                    detallesComprasEscribirProducto.addItem(listaProductos.get(i));
                    bandera = 1;
                }
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_detallesComprasCargarProductos

    private void detallesComprasBotonGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonGuardarMouseEntered
        // TODO add your handling code here:
        detallesComprasBotonGuardar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasBotonGuardar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasBotonGuardarMouseEntered

    private void detallesComprasBotonGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonGuardarMouseExited
        // TODO add your handling code here:
        detallesComprasBotonGuardar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasBotonGuardar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasBotonGuardarMouseExited

    private void detallesComprasBotonLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonLimpiarMouseEntered
        // TODO add your handling code here:
        detallesComprasBotonLimpiar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasBotonLimpiar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasBotonLimpiarMouseEntered

    private void detallesComprasBotonLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonLimpiarMouseExited
        // TODO add your handling code here:
        detallesComprasBotonLimpiar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasBotonLimpiar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasBotonLimpiarMouseExited

    private void detallesComprasBotonVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonVolverMouseEntered
        // TODO add your handling code here:
        detallesComprasBotonVolver.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasBotonVolver.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasBotonVolverMouseEntered

    private void detallesComprasBotonVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonVolverMouseExited
        // TODO add your handling code here:
        detallesComprasBotonVolver.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasBotonVolver.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasBotonVolverMouseExited

    private void detallesComprasBotonGuardarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_detallesComprasBotonGuardarItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesComprasBotonGuardarItemStateChanged

    private void detallesComprasBotonAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonAgregarMouseEntered
        // TODO add your handling code here:
        detallesComprasBotonAgregar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasBotonAgregar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasBotonAgregarMouseEntered

    private void detallesComprasBotonAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonAgregarMouseExited
        // TODO add your handling code here:
        detallesComprasBotonAgregar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasBotonAgregar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasBotonAgregarMouseExited

    private void detallesComprasBotonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasBotonAgregarActionPerformed
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
        if (cantidad < 100 && detallesComprasEscribirProducto.getSelectedIndex() > 0) {
            cantidad = cantidad + 1;
            String cantidad2 = String.valueOf(cantidad);
            detallesComprasEscribirCantidad.setText(cantidad2);
            double totalProducto = cantidad * precio;
            String totalProducto2 = String.valueOf(totalProducto);
            detallesComprasEscribirTotal.setText(totalProducto2);
        }

    }//GEN-LAST:event_detallesComprasBotonAgregarActionPerformed

    private void detallesComprasBotonDisminuirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonDisminuirMouseEntered
        // TODO add your handling code here:
        detallesComprasBotonDisminuir.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesComprasBotonDisminuir.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesComprasBotonDisminuirMouseEntered

    private void detallesComprasBotonDisminuirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesComprasBotonDisminuirMouseExited
        // TODO add your handling code here:
        detallesComprasBotonDisminuir.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesComprasBotonDisminuir.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesComprasBotonDisminuirMouseExited

    private void detallesComprasBotonDisminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesComprasBotonDisminuirActionPerformed
        // TODO add your handling code here
        precio = Double.parseDouble(detallesComprasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesComprasEscribirCantidad.getText());
        if (cantidad > 0) {
            cantidad = cantidad - 1;
            String cantidad2 = String.valueOf(cantidad);
            detallesComprasEscribirCantidad.setText(cantidad2);
            double totalProducto = cantidad * precio;
            String totalProducto2 = String.valueOf(totalProducto);
            detallesComprasEscribirTotal.setText(totalProducto2);
        }
    }//GEN-LAST:event_detallesComprasBotonDisminuirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(detallesCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(detallesCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(detallesCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(detallesCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new detallesCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton detallesComprasBotonAgregar;
    private javax.swing.JButton detallesComprasBotonDisminuir;
    private javax.swing.JButton detallesComprasBotonGuardar;
    private javax.swing.JButton detallesComprasBotonLimpiar;
    private javax.swing.JButton detallesComprasBotonVolver;
    private javax.swing.JLabel detallesComprasCantidad;
    private javax.swing.JPanel detallesComprasCuerpo;
    private javax.swing.JPanel detallesComprasEncabezado;
    private javax.swing.JTextField detallesComprasEscribirCantidad;
    public static javax.swing.JTextField detallesComprasEscribirID;
    private javax.swing.JTextField detallesComprasEscribirPrecio;
    private javax.swing.JComboBox<String> detallesComprasEscribirProducto;
    private javax.swing.JTextField detallesComprasEscribirTotal;
    private javax.swing.JLabel detallesComprasID;
    private javax.swing.JPanel detallesComprasPie;
    private javax.swing.JLabel detallesComprasPrecio;
    private javax.swing.JLabel detallesComprasProducto;
    private javax.swing.JLabel detallesComprasTitulo;
    private javax.swing.JLabel detallesrComprasTotal;
    // End of variables declaration//GEN-END:variables
}
