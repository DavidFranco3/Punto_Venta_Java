/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Conexion;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class detallesVentas extends javax.swing.JFrame {

    String id, dia, mes, a√±o, producto, proveedor, total, queryotro, insertar;
    double precio, totalProducto;
    int cantidad;
    Conexion bd;
    ResultSet res;
    Statement s;

    /**
     * Creates new form detallesVentas
     */
    public detallesVentas() {
        initComponents();
        detallesVentasEscribirProducto.removeAllItems();
    }
    ArrayList<String> listaProductos = new ArrayList<String>();
    ArrayList<String> listaClientes = new ArrayList<String>();
    DefaultComboBoxModel modelo = new DefaultComboBoxModel();
    int bandera = 0;
    int bandera2 = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detallesVentasEncabezado = new javax.swing.JPanel();
        detallesVentasTitulo = new javax.swing.JLabel();
        detallesVentasCuerpo = new javax.swing.JPanel();
        detallesVentasID = new javax.swing.JLabel();
        detallesVentasEscribirID = new javax.swing.JTextField();
        detallesVentasProducto = new javax.swing.JLabel();
        detallesVentasPrecio = new javax.swing.JLabel();
        detallesVentasEscribirPrecio = new javax.swing.JTextField();
        detallesVentasCantidad = new javax.swing.JLabel();
        detallesVentasEscribirCantidad = new javax.swing.JTextField();
        detallesrVentasTotal = new javax.swing.JLabel();
        detallesVentasEscribirTotal = new javax.swing.JTextField();
        detallesVentasEscribirProducto = new javax.swing.JComboBox<String>();
        detallesVentasBotonAgregar = new javax.swing.JButton();
        detallesVentasBotonDisminuir = new javax.swing.JButton();
        detallesVentasPie = new javax.swing.JPanel();
        detallesVentasBotonGuardar = new javax.swing.JButton();
        detallesVentasBotonVolver = new javax.swing.JButton();
        detallesVentasBotonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                detallesVentasCargarProductos(evt);
            }
        });

        detallesVentasEncabezado.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasEncabezado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEncabezado.setForeground(new java.awt.Color(255, 255, 255));

        detallesVentasTitulo.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasTitulo.setFont(new java.awt.Font("Javanese Text", 1, 26)); // NOI18N
        detallesVentasTitulo.setForeground(new java.awt.Color(255, 255, 255));
        detallesVentasTitulo.setText("Detalles ventas");
        detallesVentasTitulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout detallesVentasEncabezadoLayout = new javax.swing.GroupLayout(detallesVentasEncabezado);
        detallesVentasEncabezado.setLayout(detallesVentasEncabezadoLayout);
        detallesVentasEncabezadoLayout.setHorizontalGroup(
            detallesVentasEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detallesVentasEncabezadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detallesVentasTitulo)
                .addGap(97, 97, 97))
        );
        detallesVentasEncabezadoLayout.setVerticalGroup(
            detallesVentasEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesVentasEncabezadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detallesVentasTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        detallesVentasCuerpo.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasCuerpo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasCuerpo.setForeground(new java.awt.Color(255, 255, 255));

        detallesVentasID.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasID.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasID.setForeground(new java.awt.Color(255, 255, 255));
        detallesVentasID.setText("ID de la venta");

        detallesVentasEscribirID.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasEscribirID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEscribirID.setEnabled(false);
        detallesVentasEscribirID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirIDresaltarRegistrarComprasID(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirIDrestaurarRegistrarComprasID(evt);
            }
        });
        detallesVentasEscribirID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirIDagregaCostoTotal(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirIDverificarIRegistrarComprasID(evt);
            }
        });

        detallesVentasProducto.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasProducto.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasProducto.setForeground(new java.awt.Color(255, 255, 255));
        detallesVentasProducto.setText("Producto");
        detallesVentasProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesVentasPrecio.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasPrecio.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasPrecio.setForeground(new java.awt.Color(255, 255, 255));
        detallesVentasPrecio.setText("Precio");
        detallesVentasPrecio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesVentasEscribirPrecio.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasEscribirPrecio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEscribirPrecio.setEnabled(false);
        detallesVentasEscribirPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasEscribirPrecioActionPerformed(evt);
            }
        });
        detallesVentasEscribirPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirPrecioagregaTotal1(evt);
            }
        });

        detallesVentasCantidad.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasCantidad.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasCantidad.setForeground(new java.awt.Color(255, 255, 255));
        detallesVentasCantidad.setText("Cantidad");
        detallesVentasCantidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesVentasEscribirCantidad.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasEscribirCantidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEscribirCantidad.setEnabled(false);
        detallesVentasEscribirCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirCantidadresaltarRegistrarComprasCantidad(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirCantidadrestaurarRegistrarComprasCantidad(evt);
            }
        });
        detallesVentasEscribirCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirCantidadagregaTotal(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirCantidadverificarRegistrarComprasCantidad(evt);
            }
        });

        detallesrVentasTotal.setBackground(new java.awt.Color(0, 0, 0));
        detallesrVentasTotal.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesrVentasTotal.setForeground(new java.awt.Color(255, 255, 255));
        detallesrVentasTotal.setText("Total");
        detallesrVentasTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detallesVentasEscribirTotal.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasEscribirTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEscribirTotal.setEnabled(false);

        detallesVentasEscribirProducto.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasEscribirProducto.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasEscribirProducto.setToolTipText("Elige el producto");
        detallesVentasEscribirProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasEscribirProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                detallesVentasEscribirProductoItemStateChanged(evt);
            }
        });
        detallesVentasEscribirProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirProductoresaltarRegistrarComprasProducto(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detallesVentasEscribirProductorestaurarRegistrarComprasProducto(evt);
            }
        });
        detallesVentasEscribirProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasEscribirProductoActionPerformed(evt);
            }
        });
        detallesVentasEscribirProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                detallesVentasEscribirProductoagregaPrecio(evt);
            }
        });

        detallesVentasBotonAgregar.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasBotonAgregar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasBotonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.jpg"))); // NOI18N
        detallesVentasBotonAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasBotonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesVentasBotonAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesVentasBotonAgregarMouseExited(evt);
            }
        });
        detallesVentasBotonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasBotonAgregarActionPerformed(evt);
            }
        });

        detallesVentasBotonDisminuir.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasBotonDisminuir.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasBotonDisminuir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Disminuir.jpg"))); // NOI18N
        detallesVentasBotonDisminuir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasBotonDisminuir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesVentasBotonDisminuirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesVentasBotonDisminuirMouseExited(evt);
            }
        });
        detallesVentasBotonDisminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasBotonDisminuirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detallesVentasCuerpoLayout = new javax.swing.GroupLayout(detallesVentasCuerpo);
        detallesVentasCuerpo.setLayout(detallesVentasCuerpoLayout);
        detallesVentasCuerpoLayout.setHorizontalGroup(
            detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesVentasCuerpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(detallesVentasCuerpoLayout.createSequentialGroup()
                        .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detallesVentasPrecio)
                            .addComponent(detallesVentasCantidad)
                            .addComponent(detallesrVentasTotal)
                            .addComponent(detallesVentasProducto))
                        .addGap(18, 18, 18)
                        .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(detallesVentasCuerpoLayout.createSequentialGroup()
                                .addComponent(detallesVentasEscribirCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detallesVentasBotonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detallesVentasBotonDisminuir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(detallesVentasEscribirProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(detallesVentasEscribirPrecio)
                            .addComponent(detallesVentasEscribirTotal)))
                    .addGroup(detallesVentasCuerpoLayout.createSequentialGroup()
                        .addComponent(detallesVentasID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(detallesVentasEscribirID)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        detallesVentasCuerpoLayout.setVerticalGroup(
            detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesVentasCuerpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesVentasID)
                    .addComponent(detallesVentasEscribirID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesVentasProducto)
                    .addComponent(detallesVentasEscribirProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesVentasPrecio)
                    .addComponent(detallesVentasEscribirPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(detallesVentasCantidad)
                        .addComponent(detallesVentasEscribirCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(detallesVentasBotonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesVentasBotonDisminuir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detallesVentasCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesrVentasTotal)
                    .addComponent(detallesVentasEscribirTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        detallesVentasPie.setBackground(new java.awt.Color(0, 0, 0));
        detallesVentasPie.setForeground(new java.awt.Color(255, 255, 255));

        detallesVentasBotonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasBotonGuardar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasBotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.jpg"))); // NOI18N
        detallesVentasBotonGuardar.setText("Guardar");
        detallesVentasBotonGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasBotonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesVentasBotonGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesVentasBotonGuardarMouseExited(evt);
            }
        });
        detallesVentasBotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasBotonGuardarActionPerformed(evt);
            }
        });

        detallesVentasBotonVolver.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasBotonVolver.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasBotonVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.jpg"))); // NOI18N
        detallesVentasBotonVolver.setText("Volver");
        detallesVentasBotonVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasBotonVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesVentasBotonVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesVentasBotonVolverMouseExited(evt);
            }
        });
        detallesVentasBotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasBotonVolverActionPerformed(evt);
            }
        });

        detallesVentasBotonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        detallesVentasBotonLimpiar.setFont(new java.awt.Font("Javanese Text", 1, 14)); // NOI18N
        detallesVentasBotonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Limpiar.jpg"))); // NOI18N
        detallesVentasBotonLimpiar.setText("Limpiar");
        detallesVentasBotonLimpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        detallesVentasBotonLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detallesVentasBotonLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detallesVentasBotonLimpiarMouseExited(evt);
            }
        });
        detallesVentasBotonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesVentasBotonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detallesVentasPieLayout = new javax.swing.GroupLayout(detallesVentasPie);
        detallesVentasPie.setLayout(detallesVentasPieLayout);
        detallesVentasPieLayout.setHorizontalGroup(
            detallesVentasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesVentasPieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detallesVentasBotonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(detallesVentasBotonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(detallesVentasBotonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        detallesVentasPieLayout.setVerticalGroup(
            detallesVentasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detallesVentasPieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detallesVentasPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesVentasBotonGuardar)
                    .addComponent(detallesVentasBotonVolver)
                    .addComponent(detallesVentasBotonLimpiar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(detallesVentasCuerpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesVentasEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detallesVentasPie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detallesVentasEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detallesVentasCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detallesVentasPie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void detallesVentasEscribirIDresaltarRegistrarComprasID(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirIDresaltarRegistrarComprasID
        // TODO add your handling code here:
        detallesVentasID.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasEscribirID.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasEscribirIDresaltarRegistrarComprasID

    private void detallesVentasEscribirIDrestaurarRegistrarComprasID(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirIDrestaurarRegistrarComprasID
        // TODO add your handling code here:
        detallesVentasID.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasEscribirID.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasEscribirIDrestaurarRegistrarComprasID

    private void detallesVentasEscribirIDagregaCostoTotal(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirIDagregaCostoTotal
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesVentasEscribirIDagregaCostoTotal

    private void detallesVentasEscribirIDverificarIRegistrarComprasID(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirIDverificarIRegistrarComprasID
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();

        if ((caracter < '0' || caracter > '9' && caracter != 'C')) {

            evt.consume();
        } else if (detallesVentasEscribirID.getText().length() >= 20) {

            evt.consume();
        }
    }//GEN-LAST:event_detallesVentasEscribirIDverificarIRegistrarComprasID

    private void detallesVentasEscribirPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasEscribirPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesVentasEscribirPrecioActionPerformed

    private void detallesVentasEscribirPrecioagregaTotal1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirPrecioagregaTotal1
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
        double precioTotal = precio * cantidad;
        String totalString = String.valueOf(precioTotal);
        detallesVentasEscribirTotal.setText(totalString);
    }//GEN-LAST:event_detallesVentasEscribirPrecioagregaTotal1

    private void detallesVentasEscribirCantidadresaltarRegistrarComprasCantidad(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirCantidadresaltarRegistrarComprasCantidad
        // TODO add your handling code here:
        detallesVentasCantidad.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasEscribirCantidad.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasEscribirCantidadresaltarRegistrarComprasCantidad

    private void detallesVentasEscribirCantidadrestaurarRegistrarComprasCantidad(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirCantidadrestaurarRegistrarComprasCantidad
        // TODO add your handling code here:
        detallesVentasCantidad.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasEscribirCantidad.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasEscribirCantidadrestaurarRegistrarComprasCantidad

    private void detallesVentasEscribirCantidadagregaTotal(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirCantidadagregaTotal
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
        double precioTotal = precio * cantidad;
        String totalString = String.valueOf(precioTotal);
        detallesVentasEscribirTotal.setText(totalString);
    }//GEN-LAST:event_detallesVentasEscribirCantidadagregaTotal

    private void detallesVentasEscribirCantidadverificarRegistrarComprasCantidad(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirCantidadverificarRegistrarComprasCantidad
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();

        if ((caracter < '0' || caracter > '9' && caracter != 'C')) {

            evt.consume();
        } else if (detallesVentasEscribirCantidad.getText().length() >= 9) {

            evt.consume();
        }
    }//GEN-LAST:event_detallesVentasEscribirCantidadverificarRegistrarComprasCantidad

    private void detallesVentasEscribirProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_detallesVentasEscribirProductoItemStateChanged
        // TODO add your handling code here:
        if (detallesVentasEscribirProducto.getSelectedIndex() == 0) {
            detallesVentasEscribirPrecio.setText("0");
            detallesVentasEscribirCantidad.setText("0");
            detallesVentasEscribirTotal.setText("0");
        }
        else if (detallesVentasEscribirProducto.getSelectedIndex() > 0) {
            String seleccionado = detallesVentasEscribirProducto.getSelectedItem().toString();

            try {
                bd = new Conexion();
                s = null;
                s = Conexion.conectar().createStatement();
                res = s.executeQuery("select * from productos_existencia where descripcion='" + seleccionado + "';");
                if (res.next()) {
                    detallesVentasEscribirPrecio.setText(String.valueOf(res.getString("precio_venta").toString()));
                    precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
                    cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
                    double totalProducto = precio * cantidad;
                    String totalProducto2 = String.valueOf(totalProducto);
                    detallesVentasEscribirTotal.setText(totalProducto2);
                    s.close();

                } else {
                    JOptionPane.showMessageDialog(null, "ESE CODIGO DE PRODUCTO NO EXISTE");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "SE HA GENERADO UN ERROR, " + e);
            }
        }
    }//GEN-LAST:event_detallesVentasEscribirProductoItemStateChanged

    private void detallesVentasEscribirProductoresaltarRegistrarComprasProducto(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirProductoresaltarRegistrarComprasProducto
        // TODO add your handling code here:
        detallesVentasProducto.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasEscribirProducto.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasEscribirProductoresaltarRegistrarComprasProducto

    private void detallesVentasEscribirProductorestaurarRegistrarComprasProducto(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detallesVentasEscribirProductorestaurarRegistrarComprasProducto
        // TODO add your handling code here:
        detallesVentasProducto.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasEscribirProducto.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasEscribirProductorestaurarRegistrarComprasProducto

    private void detallesVentasEscribirProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasEscribirProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesVentasEscribirProductoActionPerformed

    private void detallesVentasEscribirProductoagregaPrecio(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detallesVentasEscribirProductoagregaPrecio
        // TODO add your handling code here:
    }//GEN-LAST:event_detallesVentasEscribirProductoagregaPrecio

    private void detallesVentasBotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasBotonGuardarActionPerformed
        // TODO add your handling code here:

        id = detallesVentasEscribirID.getText().toString();
        producto = detallesVentasEscribirProducto.getSelectedItem().toString();
        precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
        totalProducto = Double.parseDouble(detallesVentasEscribirTotal.getText());
        String cantidad2 = String.valueOf(cantidad);

        if (detallesVentasEscribirProducto.getSelectedIndex() > 0) {
            if (cantidad2.length() > 0) {

                try {
                    bd = new Conexion();
                    s = null;
                    s = Conexion.conectar().createStatement();

                    ResultSet res2 = s.executeQuery("select id_producto, existencia from productos_existencia where descripcion='" + producto + "';");
                    double existencia2 = 0;
                    if (res2.next()) {
                        producto = res2.getString("id_producto");
                        String existencia = res2.getString("existencia");
                        existencia2 = Double.valueOf(existencia);
                        queryotro = "select * from detalles_ventas WHERE ID_venta='" + id + "' AND ID_PRODUCTO='" + producto + "';";
                    }
                    if (bd.resultado(queryotro).next()) {
                        if (cantidad > existencia2) {
                            JOptionPane.showMessageDialog(null, "no hay suficientes productos para la venta, la cantidad en existencia del producto es:" + existencia2);
                        } else {
                            insertar = "UPDATE detalles_ventas SET "
                                    + "Cantidad_vendida = cantidad_vendida + '" + cantidad + "',"
                                    + "total = cantidad_vendida  * precio where ID_PRODUCTO='" + producto + "'; ";

                            s.execute(insertar);

                            JOptionPane.showMessageDialog(null, "Se ah insertado correctamente");

                            insertar = "UPDATE productos_existencia SET "
                                    + "existencia = existencia - '" + cantidad + "' where ID_PRODUCTO='" + producto + "'; ";

                            s.execute(insertar);

                            detallesVentasEscribirProducto.setSelectedIndex(0);
                            detallesVentasEscribirPrecio.setText("0");
                            detallesVentasEscribirCantidad.setText("0");
                            detallesVentasEscribirTotal.setText("0");
                            detallesVentasEscribirProducto.requestFocus();
                        }
                    } else {
                        if (cantidad > existencia2) {
                            JOptionPane.showMessageDialog(null, "No hay suficiente producto para la venta, la cantidad en existencia del producto es: " + existencia2);
                        } else {
                            insertar = "insert into detalles_ventas values ('" + id + "', '" + producto + "', '" + precio + "', '" + cantidad + "', '" + totalProducto + "')";
                            s.execute(insertar);

                            JOptionPane.showMessageDialog(null, "Se ah insertado correctamente");

                            detallesVentasEscribirProducto.setSelectedIndex(0);
                            detallesVentasEscribirPrecio.setText("0");
                            detallesVentasEscribirCantidad.setText("0");
                            detallesVentasEscribirTotal.setText("0");
                            detallesVentasEscribirProducto.requestFocus();
                        }
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Se ah generado un error," + e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor rellena los campos correctamente");
                detallesVentasEscribirCantidad.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor rellena los campos correctamente");
            detallesVentasEscribirProducto.requestFocus();
        }

    }//GEN-LAST:event_detallesVentasBotonGuardarActionPerformed

    private void detallesVentasBotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasBotonVolverActionPerformed
        // TODO add your handling code here:
        registrarVentas nuevo = new registrarVentas();
        this.setVisible(false);
        nuevo.setVisible(true);
        
        try {
            bd = new Conexion();
            s = null;
            s = Conexion.conectar().createStatement();
            res = s.executeQuery("select * from Clientes");
            while (res.next()) {

                listaClientes.add(res.getString("Nombre_completo"));
            }

            if (bandera2 == 0) {
                registrarVentas.registrarVentasEscribirCliente.addItem("Cliente");//posicion 0 de la lista del combo
                for (int i = 0; i <= listaClientes.size(); i++) {
                    registrarVentas.registrarVentasEscribirCliente.addItem(listaClientes.get(i));
                    bandera2 = 1;
                }
            }

        } catch (Exception e) {

        }

        id = detallesVentasEscribirID.getText().toString();

        if (id.length() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor ingresa un ID");
            registrarVentas.registrarVentasEscribirID.requestFocus();
        } else {
            try {
                bd = new Conexion();
                s = null;
                s = Conexion.conectar().createStatement();
                queryotro = "select v.dia_venta, v.mes_venta, v.a√±o_venta, c.nombre_completo, v. total from ventas v join clientes c on v.id_cliente=c.id_cliente where ID_venta='" + id + "';";
                res = bd.resultado(queryotro);

                if (res.next()) {

                    registrarVentas.registrarVentasEscribirID.setText(detallesVentasEscribirID.getText());
                    registrarVentas.registrarVentasEscribirDia.setSelectedItem(res.getString("dia_venta"));
                    registrarVentas.registrarVentasEscribirMes.setSelectedItem(res.getString("mes_venta"));
                    registrarVentas.registrarVentasEscribirA√±o.setSelectedItem(res.getString("a√±o_venta"));
                    registrarVentas.registrarVentasEscribirCliente.setSelectedItem(res.getString("nombre_completo"));
                    registrarVentas.registrarVentasEscribirCostoTotal.setText(res.getString("total"));

                    registrarVentas.registrarVentasEscribirID.requestFocus();

                    registrarVentas.registrarVentasEscribirID.enable(false);
                    registrarVentas.registrarVentasEscribirDia.enable(false);
                    registrarVentas.registrarVentasEscribirMes.enable(false);
                    registrarVentas.registrarVentasEscribirA√±o.enable(false);
                    registrarVentas.registrarVentasEscribirCliente.enable(false);
                    registrarVentas.registrarVentasEscribirCostoTotal.enable(false);
                    registrarVentas.registrarVentasBotonAgregar.setEnabled(false);
                    registrarVentas.registrarVentasBotonModificar.setEnabled(true);
                    bd.cerrar();
                } else {

                    //JOptionPane.showMessageDialog(null, "el producto no existe");
                    //modificarProductosEscribirID.setText(null);
                    //modificarProductosEscribirID.requestFocus();
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Se ah generado un error," + e);
            }
        }
    }//GEN-LAST:event_detallesVentasBotonVolverActionPerformed

    private void detallesVentasBotonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasBotonLimpiarActionPerformed
        // TODO add your handling code here:

        detallesVentasEscribirProducto.setSelectedIndex(0);
        detallesVentasEscribirPrecio.setText("0");
        detallesVentasEscribirCantidad.setText("0");
        detallesVentasEscribirTotal.setText("0");

        detallesVentasEscribirProducto.requestFocus();
    }//GEN-LAST:event_detallesVentasBotonLimpiarActionPerformed

    private void detallesVentasBotonGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonGuardarMouseEntered
        // TODO add your handling code here:
        detallesVentasBotonGuardar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasBotonGuardar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasBotonGuardarMouseEntered

    private void detallesVentasBotonGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonGuardarMouseExited
        // TODO add your handling code here:
        detallesVentasBotonGuardar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasBotonGuardar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasBotonGuardarMouseExited

    private void detallesVentasBotonLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonLimpiarMouseEntered
        // TODO add your handling code here:
        detallesVentasBotonLimpiar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasBotonLimpiar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasBotonLimpiarMouseEntered

    private void detallesVentasBotonLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonLimpiarMouseExited
        // TODO add your handling code here:
        detallesVentasBotonLimpiar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasBotonLimpiar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasBotonLimpiarMouseExited

    private void detallesVentasBotonVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonVolverMouseEntered
        // TODO add your handling code here:
        detallesVentasBotonVolver.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasBotonVolver.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasBotonVolverMouseEntered

    private void detallesVentasBotonVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonVolverMouseExited
        // TODO add your handling code here:
        detallesVentasBotonVolver.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasBotonVolver.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasBotonVolverMouseExited

    private void detallesVentasCargarProductos(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_detallesVentasCargarProductos
        // TODO add your handling code here:
        try {
            bd = new Conexion();
            s = null;
            s = Conexion.conectar().createStatement();
            res = s.executeQuery("select * from productos_existencia");
            while (res.next()) {

                listaProductos.add(res.getString("Descripcion"));
                //res.next();
                //modelo.addItem(listaproductos);
            }

            if (bandera == 0) {
                detallesVentasEscribirProducto.addItem("Producto");//posicion 0 de la lista del combo
                for (int i = 0; i <= listaProductos.size(); i++) {
                    detallesVentasEscribirProducto.addItem(listaProductos.get(i));
                    bandera = 1;
                }
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_detallesVentasCargarProductos

    private void detallesVentasBotonAgregarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonAgregarMouseEntered
        // TODO add your handling code here:
        detallesVentasBotonAgregar.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasBotonAgregar.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasBotonAgregarMouseEntered

    private void detallesVentasBotonAgregarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonAgregarMouseExited
        // TODO add your handling code here:
        detallesVentasBotonAgregar.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasBotonAgregar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasBotonAgregarMouseExited

    private void detallesVentasBotonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasBotonAgregarActionPerformed
        // TODO add your handling code here:
        precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
        if (cantidad < 100 && detallesVentasEscribirProducto.getSelectedIndex() > 0) {
            cantidad = cantidad + 1;
            String cantidad2 = String.valueOf(cantidad);
            detallesVentasEscribirCantidad.setText(cantidad2);
            double totalProducto = cantidad * precio;
            String totalProducto2 = String.valueOf(totalProducto);
            detallesVentasEscribirTotal.setText(totalProducto2);
        }
    }//GEN-LAST:event_detallesVentasBotonAgregarActionPerformed

    private void detallesVentasBotonDisminuirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonDisminuirMouseEntered
        // TODO add your handling code here:
        detallesVentasBotonDisminuir.setFont(new java.awt.Font("javanese Text", 3, 14));
        detallesVentasBotonDisminuir.setBackground(new Color(0, 0, 196));
    }//GEN-LAST:event_detallesVentasBotonDisminuirMouseEntered

    private void detallesVentasBotonDisminuirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detallesVentasBotonDisminuirMouseExited
        // TODO add your handling code here:
        detallesVentasBotonDisminuir.setFont(new java.awt.Font("javanese Text", 1, 14));
        detallesVentasBotonDisminuir.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_detallesVentasBotonDisminuirMouseExited

    private void detallesVentasBotonDisminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesVentasBotonDisminuirActionPerformed
        // TODO add your handling code here
        precio = Double.parseDouble(detallesVentasEscribirPrecio.getText());
        cantidad = Integer.parseInt(detallesVentasEscribirCantidad.getText());
        if (cantidad > 0) {
            cantidad = cantidad - 1;
            String cantidad2 = String.valueOf(cantidad);
            detallesVentasEscribirCantidad.setText(cantidad2);
            double totalProducto = cantidad * precio;
            String totalProducto2 = String.valueOf(totalProducto);
            detallesVentasEscribirTotal.setText(totalProducto2);
        }
    }//GEN-LAST:event_detallesVentasBotonDisminuirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(detallesVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(detallesVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(detallesVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(detallesVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new detallesVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton detallesVentasBotonAgregar;
    private javax.swing.JButton detallesVentasBotonDisminuir;
    private javax.swing.JButton detallesVentasBotonGuardar;
    private javax.swing.JButton detallesVentasBotonLimpiar;
    private javax.swing.JButton detallesVentasBotonVolver;
    private javax.swing.JLabel detallesVentasCantidad;
    private javax.swing.JPanel detallesVentasCuerpo;
    private javax.swing.JPanel detallesVentasEncabezado;
    private javax.swing.JTextField detallesVentasEscribirCantidad;
    public static javax.swing.JTextField detallesVentasEscribirID;
    private javax.swing.JTextField detallesVentasEscribirPrecio;
    private javax.swing.JComboBox<String> detallesVentasEscribirProducto;
    private javax.swing.JTextField detallesVentasEscribirTotal;
    private javax.swing.JLabel detallesVentasID;
    private javax.swing.JPanel detallesVentasPie;
    private javax.swing.JLabel detallesVentasPrecio;
    private javax.swing.JLabel detallesVentasProducto;
    private javax.swing.JLabel detallesVentasTitulo;
    private javax.swing.JLabel detallesrVentasTotal;
    // End of variables declaration//GEN-END:variables
}
